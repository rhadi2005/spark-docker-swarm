#!/bin/bash
#
# Copyright (c) 2021-2022, NVIDIA CORPORATION. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#container name : nvspark/pca:0.1
#build : docker build -f Dockerfile -t nvspark/pca:0.1 .
#run : nvidia-docker run -it nvspark/pca:0.1 bash

#ARG CUDA_VER=11.5.1
#FROM nvidia/cuda:${CUDA_VER}-devel-ubuntu20.04
ARG BRANCH_VER=22.06

ARG CUDA_VERSION=11.5
ARG LINUX_VERSION=ubuntu20.04
ARG PYTHON_VERSION=3.8
#ARG CUDA_VERSION=10.2
#ARG LINUX_VERSION=ubuntu16.04
FROM rapidsai/rapidsai:22.06-cuda${CUDA_VERSION}-runtime-${LINUX_VERSION}-py${PYTHON_VERSION}


RUN apt-get update
RUN apt-get install -y wget ninja-build git

#ENV PATH="/root/miniconda3/bin:${PATH}"
#ARG PATH="/root/miniconda3/bin:${PATH}"

#anaconda alrady installed on our VM 
#RUN wget --quiet \
#    https://repo.anaconda.com/miniconda/Miniconda3-py38_4.10.3-Linux-x86_64.sh \
#    && mkdir /root/.conda \
#    && bash Miniconda3-py38_4.10.3-Linux-x86_64.sh -b \
#    && rm -f Miniconda3-py38_4.10.3-Linux-x86_64.sh \
#    && conda init

SHELL ["conda", "run", "--no-capture-output", "-n", "base", "/bin/bash", "-c"]
RUN echo $PATH
RUN echo $CONDA_PREFIX
RUN conda --version

RUN conda install -c conda-forge openjdk=8 maven -y

# install cuDF dependency.
# not needed, we are using the default version in RAPIDS container
#RUN conda install -c rapidsai-nightly -c nvidia -c conda-forge cudf=${BRANCH_VER} python=3.8 -y
RUN conda install -c rapidsai -c nvidia -c conda-forge cudf -y

# install CUDA Toolkit(>=11.0)
#conda install -y -c rapidsai -c nvidia -c conda-forge cudatoolkit

RUN cd /tmp \
    && wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin \
    && mv cuda-ubuntu2004.pin /etc/apt/preferences.d/cuda-repository-pin-600 \
    && wget https://developer.download.nvidia.com/compute/cuda/11.7.1/local_installers/cuda-repo-ubuntu2004-11-7-local_11.7.1-515.65.01-1_amd64.deb \
    && dpkg -i cuda-repo-ubuntu2004-11-7-local_11.7.1-515.65.01-1_amd64.debsudo \
    && cp /var/cuda-repo-ubuntu2004-11-7-local/cuda-*-keyring.gpg /usr/share/keyrings/ \
    && apt-get update \
    && apt-get -y install cuda

RUN cd / \
    && wget --quiet \
    https://github.com/Kitware/CMake/releases/download/v3.21.3/cmake-3.21.3-linux-x86_64.tar.gz \
    && tar -xzf cmake-3.21.3-linux-x86_64.tar.gz \
    && rm -rf cmake-3.21.3-linux-x86_64.tar.gz 
 
ENV PATH="/cmake-3.21.3-linux-x86_64/bin:${PATH}"

RUN pwd && echo $PATH && ls -la && cmake --version

#RUN git clone -b branch-${BRANCH_VER} https://github.com/rapidsai/raft.git
RUN cd / \
    && git clone https://github.com/rapidsai/raft.git

ENV RAFT_PATH=/raft

#use main branch to download release jars
#RUN git clone -b main https://github.com/NVIDIA/spark-rapids-ml.git \
#RUN git clone https://github.com/NVIDIA/spark-rapids-ml.git \
RUN git clone https://github.com/rhadi2005/spark-rapids-ml.git \
     && cd spark-rapids-ml \
     && mvn clean

RUN pwd \
    && ls -la
RUN cd spark-rapids-ml \
    && cmake --version \
    && mvn install -DskipTests

ADD scala /workspace/scala
ADD pom.xml /workspace/

RUN cd /workspace/ \
    && mvn clean package

# install spark-3.1.2-bin-hadoop3.2
RUN wget --quiet \
    https://archive.apache.org/dist/spark/spark-3.1.2/spark-3.1.2-bin-hadoop3.2.tgz \
    && tar -xzf spark-3.1.2-bin-hadoop3.2.tgz -C /opt/ \
    && rm spark-3.1.2-bin-hadoop3.2.tgz
ENV SPARK_HOME=/opt/spark-3.1.2-bin-hadoop3.2
# add spark env to conf
ADD spark-env.sh /opt/spark-3.1.2-bin-hadoop3.2/conf/
ADD start-spark.sh /workspace/
ADD spark-submit.sh /workspace/

WORKDIR /workspace
