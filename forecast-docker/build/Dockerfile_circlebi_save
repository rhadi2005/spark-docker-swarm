
#container name : rhadi2005/forecast
#build : docker build -f Dockerfile -t rhadi2005/forecast .
#run : nvidia-docker run -it rhadi2005/forecast bash

#to push to docker hub registry
#docker login => circlebi or rhadi2005
#docker tag local-image:tagname new-repo:tagname
#docker push new-repo:tagname

#USER = root

#FROM must be the 1st of dockerfile command line
#use FROM scratch if there is no container image base
#FROM scratch 

#https://hub.docker.com/r/rapidsai/rapidsai/
#https://kb.brightcomputing.com/knowledge-base/how-do-i-create-docker-images-to-use-nvidia-gpus-with-spark-and-xgboost-via-rapids/

#NVIDIA RAPIDS AI container as base image
FROM rapidsai/rapidsai:22.06-cuda11.5-runtime-ubuntu20.04-py3.8

WORKDIR /rapids/notebooks

RUN echo "Building circlebi/forecast container image" \
    && pwd \
    && apt-get update \
    && apt-get install -y wget vim git 

RUN source activate rapids \
    && conda install -y -c rapidsai -c nvidia cudf \
    && conda install -y -c conda-forge pyspark findspark dash pmdarima \
    && conda install -y -c plotly plotly \
    && conda install -y -c anaconda xlrd

# copy nvidia-rapids-spark jar to container /root/.m2/repository
ADD lib/rapids-4-spark-ml_2.12-22.08.0-SNAPSHOT.jar /root/.m2/repository
#ADD lib/rapids-4-spark_2.12-22.06.0.jar /root/.m2/repository
ADD lib/cudf-22.06.0.jar /root/.m2/repository

# TODO : install JRE => already installed in rapidsai base image ?
#RUN conda install -c conda-forge openjdk=8 maven -y

# install spark-3.1.2-bin-hadoop3.2
RUN cd /tmp \
    && wget --quiet \
    https://archive.apache.org/dist/spark/spark-3.1.2/spark-3.1.2-bin-hadoop3.2.tgz \
    && tar -xzf spark-3.1.2-bin-hadoop3.2.tgz -C /opt/ \
    && rm spark-3.1.2-bin-hadoop3.2.tgz \
    && ln -s /opt/spark-3.1.2-bin-hadoop3.2 /opt/spark-3.1.2

ENV JAVA_HOME=/opt/conda/envs/rapids
ENV SPARK_HOME=/opt/spark-3.1.2

# add spark env to conf
ADD tmp/spark-env.sh /opt/spark-3.1.2/
ADD tmp/start-spark.sh /rapids/notebooks/
ADD tmp/spark-submit.sh /rapids/notebooks/

# add docker container files
ADD environment-for-docker.yml ./
ADD entrypoint.sh ./

#RUN conda update -n base conda \
#    && conda init bash 

ENTRYPOINT ["bash","./entrypoint.sh"]



